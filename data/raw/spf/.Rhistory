count_ind = 1 + count_ind
main.data1[ind0,count_ind] <- main.data[ind0,ind1+1]
}
}
}
main.data1 <- remove_empty(main.data1, which = c("rows", "cols"), quiet = TRUE) # delete entirely NA columns and rows
main.data1 <- as.data.frame(main.data1,stringsAsFactors = FALSE)
steps <- ncol(main.data1) -2
names0 <- vector()
for (ind2 in 1:steps) {
names0[ind2] <- paste0("step", ind2)
}
names <- c("date", "nowcast", names0)
colnames(main.data1) <- names
tmpsplit <- vector(mode = "list")
for (ind4 in 1:nrow(main.data1)) {
tmpsplit <- vector(mode = "list")
tmpsplit <- strsplit(as.character(main.data1[ind4,1]), " ")
tmpsplit<-unlist(tmpsplit)
main.data1[ind4,1] <- paste0(tmpsplit[2]," ", tmpsplit[3])
}
main.data1
library(readxl)
library(writexl)
library(janitor)
#library(dplyr)
library(stringr) # For str_trim
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
main.data <- as.data.frame(read_excel("grgdp.xlsx"))
# rearrange the data into presentation format
main.data1 <- matrix(,nrow(main.data),ncol(main.data))
for (ind0 in 1:nrow(main.data)) {
count_ind = 0
for (ind1 in 1:ncol(main.data)-1) {
if (is.na(main.data[ind0,ind1+1])) {
} else {
count_ind = 1 + count_ind
main.data1[ind0,count_ind] <- main.data[ind0,ind1+1]
}
}
}
main.data1 <- remove_empty(main.data1, which = c("rows", "cols"), quiet = TRUE) # delete entirely NA columns and rows
main.data1 <- as.data.frame(main.data1,stringsAsFactors = FALSE)
#generate column names
steps <- ncol(main.data1) -2
names0 <- vector()
for (ind2 in 1:steps) {
names0[ind2] <- paste0("step", ind2)
}
names <- c("date", "nowcast", names0)
colnames(main.data1) <- names
colnames
library(readxl)
library(writexl)
library(janitor)
#library(dplyr)
library(stringr) # For str_trim
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
main.data <- as.data.frame(read_excel("grgdp.xlsx"))
# rearrange the data into presentation format
main.data1 <- matrix(,nrow(main.data),ncol(main.data))
for (ind0 in 1:nrow(main.data)) {
count_ind = 0
for (ind1 in 1:ncol(main.data)-1) {
if (is.na(main.data[ind0,ind1+1])) {
} else {
count_ind = 1 + count_ind
main.data1[ind0,count_ind] <- main.data[ind0,ind1+1]
}
}
}
main.data1 <- remove_empty(main.data1, which = c("rows", "cols"), quiet = TRUE) # delete entirely NA columns and rows
main.data1 <- as.data.frame(main.data1)
#generate column names
steps <- ncol(main.data1) -2
names0 <- vector()
for (ind2 in 1:steps) {
names0[ind2] <- paste0("step", ind2)
}
names <- c("date", "nowcast", names0)
colnames(main.data1) <- names
main.data1
main.data1 <- as.data.frame(main.data1, stringsAsFactors=FALSE)
main.data1
tmpsplit <- vector(mode = "list")
for (ind4 in 1:nrow(main.data1)) {
tmpsplit <- vector(mode = "list")
tmpsplit <- strsplit(as.character(main.data1[ind4,1]), " ")
tmpsplit<-unlist(tmpsplit)
main.data1[ind4,1] <- paste0(tmpsplit[2]," ", tmpsplit[3])
}
main.data1
library(readxl)
library(writexl)
library(janitor)
#library(dplyr)
library(stringr) # For str_trim
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
main.data <- as.data.frame(read_excel("grgdp.xlsx"))
# rearrange the data into presentation format
main.data1 <- matrix(,nrow(main.data),ncol(main.data))
for (ind0 in 1:nrow(main.data)) {
count_ind = 0
for (ind1 in 1:ncol(main.data)-1) {
if (is.na(main.data[ind0,ind1+1])) {
} else {
count_ind = 1 + count_ind
main.data1[ind0,count_ind] <- main.data[ind0,ind1+1]
}
}
}
main.data1 <- remove_empty(main.data1, which = c("rows", "cols"), quiet = TRUE) # delete entirely NA columns and rows
main.data1 <- as.data.frame(main.data1)
#generate column names
steps <- ncol(main.data1) -2
names0 <- vector()
for (ind2 in 1:steps) {
names0[ind2] <- paste0("step", ind2)
}
names <- c("date", "nowcast", names0)
colnames(main.data1) <- names
tmpsplit <- vector(mode = "list")
for (ind4 in 1:nrow(main.data1)) {
tmpsplit <- vector(mode = "list")
tmpsplit <- strsplit(as.character(main.data1[ind4,1]), " ")
tmpsplit<- as.vector(tmpsplit, stringsAsFactors=FALSE)
main.data1[ind4,1] <- paste0(tmpsplit[2]," ", tmpsplit[3])
}
library(readxl)
library(writexl)
library(janitor)
#library(dplyr)
library(stringr) # For str_trim
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
main.data <- as.data.frame(read_excel("grgdp.xlsx"))
# rearrange the data into presentation format
main.data1 <- matrix(,nrow(main.data),ncol(main.data))
for (ind0 in 1:nrow(main.data)) {
count_ind = 0
for (ind1 in 1:ncol(main.data)-1) {
if (is.na(main.data[ind0,ind1+1])) {
} else {
count_ind = 1 + count_ind
main.data1[ind0,count_ind] <- main.data[ind0,ind1+1]
}
}
}
main.data1 <- remove_empty(main.data1, which = c("rows", "cols"), quiet = TRUE) # delete entirely NA columns and rows
main.data1 <- as.data.frame(main.data1)
#generate column names
steps <- ncol(main.data1) -2
names0 <- vector()
for (ind2 in 1:steps) {
names0[ind2] <- paste0("step", ind2)
}
names <- c("date", "nowcast", names0)
colnames(main.data1) <- names
# restrcture the dates
tmpsplit <- vector(mode = "list")
for (ind4 in 1:nrow(main.data1)) {
tmpsplit <- vector(mode = "list")
tmpsplit <- strsplit(as.character(main.data1[ind4,1]), " ")
tmpsplit<- as.vector(tmpsplit)
main.data1[ind4,1] <- paste0(tmpsplit[2]," ", tmpsplit[3])
}
main.data1
library(readxl)
library(writexl)
library(janitor)
#library(dplyr)
library(stringr) # For str_trim
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
main.data <- as.data.frame(read_excel("grgdp.xlsx"))
# rearrange the data into presentation format
main.data1 <- matrix(,nrow(main.data),ncol(main.data))
for (ind0 in 1:nrow(main.data)) {
count_ind = 0
for (ind1 in 1:ncol(main.data)-1) {
if (is.na(main.data[ind0,ind1+1])) {
} else {
count_ind = 1 + count_ind
main.data1[ind0,count_ind] <- main.data[ind0,ind1+1]
}
}
}
main.data1 <- remove_empty(main.data1, which = c("rows", "cols"), quiet = TRUE) # delete entirely NA columns and rows
main.data1 <- as.data.frame(main.data1)
#generate column names
steps <- ncol(main.data1) -2
names0 <- vector()
for (ind2 in 1:steps) {
names0[ind2] <- paste0("step", ind2)
}
names <- c("date", "nowcast", names0)
colnames(main.data1) <- names
# restrcture the dates
tmpsplit <- vector(mode = "list")
for (ind4 in 1:nrow(main.data1)) {
tmpsplit <- vector(mode = "list")
tmpsplit <- strsplit(as.character(main.data1[ind4,1]), " ")
main.data1[ind4,1] <- paste0(tmpsplit[2]," ", tmpsplit[3])
}
main.data1
paste0(tmpsplit[2]," ", tmpsplit[3]
)
library(readxl)
library(writexl)
library(janitor)
#library(dplyr)
library(stringr) # For str_trim
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
main.data <- as.data.frame(read_excel("grgdp.xlsx"))
# rearrange the data into presentation format
main.data1 <- matrix(,nrow(main.data),ncol(main.data))
for (ind0 in 1:nrow(main.data)) {
count_ind = 0
for (ind1 in 1:ncol(main.data)-1) {
if (is.na(main.data[ind0,ind1+1])) {
} else {
count_ind = 1 + count_ind
main.data1[ind0,count_ind] <- main.data[ind0,ind1+1]
}
}
}
main.data1 <- remove_empty(main.data1, which = c("rows", "cols"), quiet = TRUE) # delete entirely NA columns and rows
main.data1 <- as.data.frame(main.data1)
#generate column names
steps <- ncol(main.data1) -2
names0 <- vector()
for (ind2 in 1:steps) {
names0[ind2] <- paste0("step", ind2)
}
names <- c("date", "nowcast", names0)
colnames(main.data1) <- names
ind4
tmpsplit <- vector(mode = "list")
tmpsplit <- strsplit(as.character(main.data1[ind4,1]), " ")
tmpsplit
paste0(tmpsplit[2]," ", tmpsplit[3])
tmpsplit <- unlist(tmpsplit)
tmpsplit
paste0(tmpsplit[2]," ", tmpsplit[3])
tmpsplit[-1]
paste0(tmpsplit[2]," ", tmpsplit[3])
tmpsplit
tmpsplit <- tmpsplit[-1]
tmpsplit
paste(tmpsplit, collapse = '')
paste(tmpsplit,  sep = '' ,collapse = '')
tmpsplit<- paste(tmpsplit,  sep = '' ,collapse = '')
tmpsplit
paste(tmpsplit,  sep = '' ,collapse = '')
main.data1[ind4,1] <- paste(tmpsplit,  sep = '' ,collapse = '')
main.data1
library(readxl)
library(dplyr)
library(writexl)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
main.data <- as.data.frame(read_excel("individual_rgdp.xlsx"))
main.data <-  main.data %>% group_by(ID) %>% arrange(YEAR, QUARTER, .by_group = TRUE) #%>% arrange(QUARTER, .by_group = TRUE)
# all values in log, i.e. growth rate
nowcast <- (log(as.numeric(main.data$RGDP2)) - log(as.numeric(main.data$RGDP1)))
step1 <- log(as.numeric(main.data$RGDP3)) - log(as.numeric(main.data$RGDP2))
step2 <- log(as.numeric(main.data$RGDP4)) - log(as.numeric(main.data$RGDP3))
step3 <- log(as.numeric(main.data$RGDP5)) - log(as.numeric(main.data$RGDP4))
step4 <- log(as.numeric(main.data$RGDP6)) - log(as.numeric(main.data$RGDP5))
# define spf deadlines
# merge it back
rgdpgrowthdat <- cbind( "Year" = main.data$YEAR, "quater" =  main.data$QUARTER , "id" = main.data$ID , "Last quater" =  log(as.numeric(main.data$RGDP1)), nowcast,  step1 ,  step2,
step3,step4 )
rgdpgrowthdat <- as.data.frame(rgdpgrowthdat)
rgdpgrowthdat
ind0 = 1
paste0(rgdpgrowthdat$Year[ind0], "Q",rgdpgrowthdat$quater[ind0] )
tmp_date <- as.numeric()
for (ind0 in 1:nrow(rgdpgrowthdat)) {
tmp_date[ind0]<-paste0(rgdpgrowthdat$Year[ind0], "Q",rgdpgrowthdat$quater[ind0] )
}
tmp_date
rgdpgrowthdat <- [-1,]
rgdpgrowthdat <- rgdpgrowthdat[-1,]
rgdpgrowthdat
library(readxl)
library(dplyr)
library(writexl)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
main.data <- as.data.frame(read_excel("individual_rgdp.xlsx"))
main.data <-  main.data %>% group_by(ID) %>% arrange(YEAR, QUARTER, .by_group = TRUE) #%>% arrange(QUARTER, .by_group = TRUE)
# all values in log, i.e. growth rate
nowcast <- (log(as.numeric(main.data$RGDP2)) - log(as.numeric(main.data$RGDP1)))*100
step1 <- (log(as.numeric(main.data$RGDP3)) - log(as.numeric(main.data$RGDP2)))*100
step2 <- (log(as.numeric(main.data$RGDP4)) - log(as.numeric(main.data$RGDP3)))*100
step3 <- (log(as.numeric(main.data$RGDP5)) - log(as.numeric(main.data$RGDP4)))*100
step4 <- (log(as.numeric(main.data$RGDP6)) - log(as.numeric(main.data$RGDP5)))*100
# define spf deadlines
# merge it back
rgdpgrowthdat <- cbind( "Year" = main.data$YEAR, "quater" =  main.data$QUARTER , "id" = main.data$ID , "Last quater" =  log(as.numeric(main.data$RGDP1)), nowcast,  step1 ,  step2,
step3,step4 )
rgdpgrowthdat <- as.data.frame(rgdpgrowthdat)
# change the date format
tmp_date <- as.numeric()
for (ind0 in 1:nrow(rgdpgrowthdat)) {
tmp_date[ind0]<-paste0(rgdpgrowthdat$Year[ind0], "Q",rgdpgrowthdat$quater[ind0] )
}
rgdpgrowthdat <- rgdpgrowthdat[,-1]
rgdpgrowthdat <- rgdpgrowthdat[,-2]
rgdpgrowthdat <- cbind( "date" = tmp_date, rgdpgrowthdat)
rgdpgrowthdat
library(readxl)
library(dplyr)
library(writexl)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
main.data <- as.data.frame(read_excel("individual_rgdp.xlsx"))
main.data <-  main.data %>% group_by(ID) %>% arrange(YEAR, QUARTER, .by_group = TRUE) #%>% arrange(QUARTER, .by_group = TRUE)
# all values in log, i.e. growth rate
nowcast <- (log(as.numeric(main.data$RGDP2)) - log(as.numeric(main.data$RGDP1)))*100
step1 <- (log(as.numeric(main.data$RGDP3)) - log(as.numeric(main.data$RGDP2)))*100
step2 <- (log(as.numeric(main.data$RGDP4)) - log(as.numeric(main.data$RGDP3)))*100
step3 <- (log(as.numeric(main.data$RGDP5)) - log(as.numeric(main.data$RGDP4)))*100
step4 <- (log(as.numeric(main.data$RGDP6)) - log(as.numeric(main.data$RGDP5)))*100
# define spf deadlines
# merge it back
rgdpgrowthdat <- cbind( "Year" = main.data$YEAR, "quater" =  main.data$QUARTER , "id" = main.data$ID , "Last quater" =  log(as.numeric(main.data$RGDP1)), nowcast,  step1 ,  step2,
step3,step4 )
rgdpgrowthdat <- as.data.frame(rgdpgrowthdat)
# change the date format
tmp_date <- as.numeric()
for (ind0 in 1:nrow(rgdpgrowthdat)) {
tmp_date[ind0]<-paste0(rgdpgrowthdat$Year[ind0], "Q",rgdpgrowthdat$quater[ind0] )
}
rgdpgrowthdat <- rgdpgrowthdat[,-1]
rgdpgrowthdat <- rgdpgrowthdat[,-1]
rgdpgrowthdat <- cbind( "date" = tmp_date, rgdpgrowthdat)
rgdpgrowthdat
library(readxl)
library(dplyr)
library(writexl)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
main.data <- as.data.frame(read_excel("individual_rgdp.xlsx"))
main.data <-  main.data %>% group_by(ID) %>% arrange(YEAR, QUARTER, .by_group = TRUE) #%>% arrange(QUARTER, .by_group = TRUE)
# all values in log, i.e. growth rate
nowcast <- (log(as.numeric(main.data$RGDP2)) - log(as.numeric(main.data$RGDP1)))*100
step1 <- (log(as.numeric(main.data$RGDP3)) - log(as.numeric(main.data$RGDP2)))*100
step2 <- (log(as.numeric(main.data$RGDP4)) - log(as.numeric(main.data$RGDP3)))*100
step3 <- (log(as.numeric(main.data$RGDP5)) - log(as.numeric(main.data$RGDP4)))*100
step4 <- (log(as.numeric(main.data$RGDP6)) - log(as.numeric(main.data$RGDP5)))*100
# define spf deadlines
# merge it back
rgdpgrowthdat <- cbind( "Year" = main.data$YEAR, "quater" =  main.data$QUARTER , "id" = main.data$ID , nowcast,  step1 ,  step2,
step3,step4 )
rgdpgrowthdat <- as.data.frame(rgdpgrowthdat)
# change the date format
tmp_date <- as.numeric()
for (ind0 in 1:nrow(rgdpgrowthdat)) {
tmp_date[ind0]<-paste0(rgdpgrowthdat$Year[ind0], "Q",rgdpgrowthdat$quater[ind0] )
}
rgdpgrowthdat <- rgdpgrowthdat[,-1]
rgdpgrowthdat <- rgdpgrowthdat[,-1]
rgdpgrowthdat <- cbind( "date" = tmp_date, rgdpgrowthdat)
write_xlsx(rgdpgrowthdat, path = "spf_rggdp_sorted.xlsx", col_names = TRUE)
library(readxl)
library(dplyr)
library(writexl)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
main.data <- as.data.frame(read_excel("individual_rgdp.xlsx"))
main.data <-  main.data %>% group_by(ID) %>% arrange(YEAR, QUARTER, .by_group = TRUE) #%>% arrange(QUARTER, .by_group = TRUE)
# all values in log, i.e. growth rate
nowcast <- (log(as.numeric(main.data$RGDP2)) - log(as.numeric(main.data$RGDP1)))*100
step1 <- (log(as.numeric(main.data$RGDP3)) - log(as.numeric(main.data$RGDP2)))*100
step2 <- (log(as.numeric(main.data$RGDP4)) - log(as.numeric(main.data$RGDP3)))*100
step3 <- (log(as.numeric(main.data$RGDP5)) - log(as.numeric(main.data$RGDP4)))*100
step4 <- (log(as.numeric(main.data$RGDP6)) - log(as.numeric(main.data$RGDP5)))*100
# define spf deadlines
# merge it back
rgdpgrowthdat <- cbind( "Year" = main.data$YEAR, "quater" =  main.data$QUARTER , "id" = main.data$ID , nowcast,  step1 ,  step2,
step3,step4 )
rgdpgrowthdat <- as.data.frame(rgdpgrowthdat)
# change the date format
tmp_date <- as.numeric()
for (ind0 in 1:nrow(rgdpgrowthdat)) {
tmp_date[ind0]<-paste0(rgdpgrowthdat$Year[ind0], "Q",rgdpgrowthdat$quater[ind0] )
}
rgdpgrowthdat <- rgdpgrowthdat[,-1]
rgdpgrowthdat <- rgdpgrowthdat[,-1]
rgdpgrowthdat <- cbind( "date" = tmp_date, rgdpgrowthdat)
write_xlsx(rgdpgrowthdat, path = "spf_rggdp_sorted.xlsx", col_names = TRUE)
library(readxl)
library(dplyr)
library(writexl)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
main.data <- as.data.frame(read_excel("individual_rgdp.xlsx"))
main.data <-  main.data %>% group_by(ID) %>% arrange(YEAR, QUARTER, .by_group = TRUE) #%>% arrange(QUARTER, .by_group = TRUE)
# all values in log, i.e. growth rate
nowcast <- (log(as.numeric(main.data$RGDP2)) - log(as.numeric(main.data$RGDP1)))*100
step1 <- (log(as.numeric(main.data$RGDP3)) - log(as.numeric(main.data$RGDP2)))*100
step2 <- (log(as.numeric(main.data$RGDP4)) - log(as.numeric(main.data$RGDP3)))*100
step3 <- (log(as.numeric(main.data$RGDP5)) - log(as.numeric(main.data$RGDP4)))*100
step4 <- (log(as.numeric(main.data$RGDP6)) - log(as.numeric(main.data$RGDP5)))*100
# define spf deadlines
# merge it back
rgdpgrowthdat <- cbind( "Year" = main.data$YEAR, "quater" =  main.data$QUARTER , "id" = main.data$ID , nowcast,  step1 ,  step2,
step3,step4 )
rgdpgrowthdat <- as.data.frame(rgdpgrowthdat)
# change the date format
tmp_date0 <- as.numeric()
tmp_date1 <- as.numeric()
for (ind0 in 1:nrow(rgdpgrowthdat)) {
tmp_date0[ind0]<-as.numeric(paste0(rgdpgrowthdat$Year[ind0], ".",rgdpgrowthdat$quater[ind0] ))
tmp_date1[ind0]<-as.numeric(paste0(rgdpgrowthdat$Year[ind0], "Q",rgdpgrowthdat$quater[ind0] ))
}
rgdpgrowthdat <- cbind( "datenum" = tmp_date0, "date" = tmp_date1,  rgdpgrowthdat)
rgdpgrowthdat
library(readxl)
library(dplyr)
library(writexl)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
main.data <- as.data.frame(read_excel("individual_rgdp.xlsx"))
main.data <-  main.data %>% group_by(ID) %>% arrange(YEAR, QUARTER, .by_group = TRUE) #%>% arrange(QUARTER, .by_group = TRUE)
# all values in log, i.e. growth rate
nowcast <- (log(as.numeric(main.data$RGDP2)) - log(as.numeric(main.data$RGDP1)))*100
step1 <- (log(as.numeric(main.data$RGDP3)) - log(as.numeric(main.data$RGDP2)))*100
step2 <- (log(as.numeric(main.data$RGDP4)) - log(as.numeric(main.data$RGDP3)))*100
step3 <- (log(as.numeric(main.data$RGDP5)) - log(as.numeric(main.data$RGDP4)))*100
step4 <- (log(as.numeric(main.data$RGDP6)) - log(as.numeric(main.data$RGDP5)))*100
# define spf deadlines
# merge it back
rgdpgrowthdat <- cbind( "Year" = main.data$YEAR, "quater" =  main.data$QUARTER , "id" = main.data$ID , nowcast,  step1 ,  step2,
step3,step4 )
rgdpgrowthdat <- as.data.frame(rgdpgrowthdat)
# change the date format
tmp_date0 <- as.numeric()
tmp_date1 <- as.numeric()
for (ind0 in 1:nrow(rgdpgrowthdat)) {
tmp_date0[ind0]<-as.numeric(paste0(rgdpgrowthdat$Year[ind0], ".",rgdpgrowthdat$quater[ind0] ))
tmp_date1[ind0]<-paste0(rgdpgrowthdat$Year[ind0], "Q",rgdpgrowthdat$quater[ind0] )
}
rgdpgrowthdat <- cbind( "datenum" = tmp_date0, "date" = tmp_date1,  rgdpgrowthdat)
rgdpgrowthdat
rgdpgrowthdat<- rgdpgrowthdat[rgdpgrowthdat[,1] > 1990.2]
rgdpgrowthdat<- rgdpgrowthdat[,rgdpgrowthdat[,1] > 1990.2]
rgdpgrowthdat
rgdpgrowthdat[,1]
rgdpgrowthdat[,1] > 1990.2
rgdpgrowthdat[rgdpgrowthdat[,1] > 1990.2,]
rgdpgrowthdat<- rgdpgrowthdat[rgdpgrowthdat[,1] > 1990.2,]
rgdpgrowthdat
library(readxl)
library(dplyr)
library(writexl)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
main.data <- as.data.frame(read_excel("individual_rgdp.xlsx"))
main.data <-  main.data %>% group_by(ID) %>% arrange(YEAR, QUARTER, .by_group = TRUE) #%>% arrange(QUARTER, .by_group = TRUE)
# all values in log, i.e. growth rate
nowcast <- (log(as.numeric(main.data$RGDP2)) - log(as.numeric(main.data$RGDP1)))*100
step1 <- (log(as.numeric(main.data$RGDP3)) - log(as.numeric(main.data$RGDP2)))*100
step2 <- (log(as.numeric(main.data$RGDP4)) - log(as.numeric(main.data$RGDP3)))*100
step3 <- (log(as.numeric(main.data$RGDP5)) - log(as.numeric(main.data$RGDP4)))*100
step4 <- (log(as.numeric(main.data$RGDP6)) - log(as.numeric(main.data$RGDP5)))*100
# define spf deadlines
# merge it back
rgdpgrowthdat <- cbind( "Year" = main.data$YEAR, "quater" =  main.data$QUARTER , "id" = main.data$ID , nowcast,  step1 ,  step2,
step3,step4 )
rgdpgrowthdat <- as.data.frame(rgdpgrowthdat)
# change the date format
tmp_date0 <- as.numeric()
tmp_date1 <- as.numeric()
for (ind0 in 1:nrow(rgdpgrowthdat)) {
tmp_date0[ind0]<-as.numeric(paste0(rgdpgrowthdat$Year[ind0], ".",rgdpgrowthdat$quater[ind0] ))
tmp_date1[ind0]<-paste0(rgdpgrowthdat$Year[ind0], "Q",rgdpgrowthdat$quater[ind0] )
}
rgdpgrowthdat <- cbind( "datenum" = tmp_date0, "date" = tmp_date1,  rgdpgrowthdat)
rgdpgrowthdat<- rgdpgrowthdat[rgdpgrowthdat[,1] > 1990.2,]
rgdpgrowthdat$datenum <- NULL
rgdpgrowthdat$Year <- NULL
rgdpgrowthdat$quater <- NULL
rgdpgrowthdat
rgdpgrowthdat<-as.data.frame(rgdpgrowthdat)
rgdpgrowthdat
write_xlsx(rgdpgrowthdat, path = "spf_rggdp_sorted.xlsx", col_names = TRUE)
write_xlsx(rgdpgrowthdat, path = "spf_rggdp_sorted.xlsx", col_names = TRUE)
library(readxl)
library(dplyr)
library(writexl)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
main.data <- as.data.frame(read_excel("individual_rgdp.xlsx"))
#main.data <-  main.data %>% group_by(ID) %>% arrange(YEAR, QUARTER, .by_group = TRUE) #%>% arrange(QUARTER, .by_group = TRUE)
main.data <-  main.data %>% group_by(YEAR) %>% arrange(QUARTER, ID, .by_group = TRUE) #%>% arrange(QUARTER, .by_group = TRUE)
# all values in log, i.e. growth rate
nowcast <- (log(as.numeric(main.data$RGDP2)) - log(as.numeric(main.data$RGDP1)))*100
step1 <- (log(as.numeric(main.data$RGDP3)) - log(as.numeric(main.data$RGDP2)))*100
step2 <- (log(as.numeric(main.data$RGDP4)) - log(as.numeric(main.data$RGDP3)))*100
step3 <- (log(as.numeric(main.data$RGDP5)) - log(as.numeric(main.data$RGDP4)))*100
step4 <- (log(as.numeric(main.data$RGDP6)) - log(as.numeric(main.data$RGDP5)))*100
# define spf deadlines
# merge it back
rgdpgrowthdat <- cbind( "Year" = main.data$YEAR, "quater" =  main.data$QUARTER , "id" = main.data$ID , nowcast,  step1 ,  step2,
step3,step4 )
rgdpgrowthdat <- as.data.frame(rgdpgrowthdat)
# change the date format
tmp_date0 <- as.numeric()
tmp_date1 <- as.numeric()
for (ind0 in 1:nrow(rgdpgrowthdat)) {
tmp_date0[ind0]<-as.numeric(paste0(rgdpgrowthdat$Year[ind0], ".",rgdpgrowthdat$quater[ind0] ))
tmp_date1[ind0]<-paste0(rgdpgrowthdat$Year[ind0], "Q",rgdpgrowthdat$quater[ind0] )
}
rgdpgrowthdat <- cbind( "datenum" = tmp_date0, "date" = tmp_date1,  rgdpgrowthdat)
rgdpgrowthdat<- rgdpgrowthdat[rgdpgrowthdat[,1] > 1990.2,]
rgdpgrowthdat$datenum <- NULL
rgdpgrowthdat$Year <- NULL
rgdpgrowthdat$quater <- NULL
rgdpgrowthdat<-as.data.frame(rgdpgrowthdat)
write_xlsx(rgdpgrowthdat, path = "spf_rggdp_sorted.xlsx", col_names = TRUE)
