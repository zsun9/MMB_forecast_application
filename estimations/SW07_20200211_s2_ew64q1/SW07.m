%
% Status : main Dynare file
%
% Warning : this file is generated automatically by Dynare
%           from model file (.mod)

if isoctave || matlab_ver_less_than('8.6')
    clear all
else
    clearvars -global
    clear_persistent_variables(fileparts(which('dynare')), false)
end
tic0 = tic;
% Save empty dates and dseries objects in memory.
dates('initialize');
dseries('initialize');
% Define global variables.
global M_ options_ oo_ estim_params_ bayestopt_ dataset_ dataset_info estimation_info ys0_ ex0_
options_ = [];
M_.fname = 'SW07';
M_.dynare_version = '4.5.7';
oo_.dynare_version = '4.5.7';
options_.dynare_version = '4.5.7';
%
% Some global variables initialization
%
global_initialization;
diary off;
diary('SW07.log');
M_.exo_names = 'ea';
M_.exo_names_tex = '{\eta^a}';
M_.exo_names_long = 'productivity shock';
M_.exo_names = char(M_.exo_names, 'eb');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta^b}');
M_.exo_names_long = char(M_.exo_names_long, 'Investment-specific technology shock');
M_.exo_names = char(M_.exo_names, 'eg');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta^g}');
M_.exo_names_long = char(M_.exo_names_long, 'Spending shock');
M_.exo_names = char(M_.exo_names, 'eqs');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta^i}');
M_.exo_names_long = char(M_.exo_names_long, 'Investment-specific technology shock');
M_.exo_names = char(M_.exo_names, 'em');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta^m}');
M_.exo_names_long = char(M_.exo_names_long, 'Monetary policy shock');
M_.exo_names = char(M_.exo_names, 'epinf');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta^{p}}');
M_.exo_names_long = char(M_.exo_names_long, 'Price markup shock');
M_.exo_names = char(M_.exo_names, 'ew');
M_.exo_names_tex = char(M_.exo_names_tex, '{\eta^{w}}');
M_.exo_names_long = char(M_.exo_names_long, 'Wage markup shock');
M_.endo_names = 'hours_sw07_obs';
M_.endo_names_tex = '{lHOURS}';
M_.endo_names_long = 'log hours worked';
M_.endo_names = char(M_.endo_names, 'ffr_obs');
M_.endo_names_tex = char(M_.endo_names_tex, '{FEDFUNDS}');
M_.endo_names_long = char(M_.endo_names_long, 'Federal funds rate');
M_.endo_names = char(M_.endo_names, 'gdpdef_obs');
M_.endo_names_tex = char(M_.endo_names_tex, '{dlP}');
M_.endo_names_long = char(M_.endo_names_long, 'Inflation');
M_.endo_names = char(M_.endo_names, 'gdp_rgd_obs');
M_.endo_names_tex = char(M_.endo_names_tex, '{dlGDP}');
M_.endo_names_long = char(M_.endo_names_long, 'Output growth rate');
M_.endo_names = char(M_.endo_names, 'c_rgd_obs');
M_.endo_names_tex = char(M_.endo_names_tex, '{dlCONS}');
M_.endo_names_long = char(M_.endo_names_long, 'Consumption growth rate');
M_.endo_names = char(M_.endo_names, 'ifi_rgd_obs');
M_.endo_names_tex = char(M_.endo_names_tex, '{dlINV}');
M_.endo_names_long = char(M_.endo_names_long, 'Investment growth rate');
M_.endo_names = char(M_.endo_names, 'wage_rgd_obs');
M_.endo_names_tex = char(M_.endo_names_tex, '{dlWAG}');
M_.endo_names_long = char(M_.endo_names_long, 'Wage growth rate');
M_.endo_names = char(M_.endo_names, 'ewma');
M_.endo_names_tex = char(M_.endo_names_tex, '{\eta^{w,aux}}');
M_.endo_names_long = char(M_.endo_names_long, 'Auxiliary wage markup moving average variable');
M_.endo_names = char(M_.endo_names, 'epinfma');
M_.endo_names_tex = char(M_.endo_names_tex, '{\eta^{p,aux}}');
M_.endo_names_long = char(M_.endo_names_long, 'Auxiliary price markup moving average variable');
M_.endo_names = char(M_.endo_names, 'zcapf');
M_.endo_names_tex = char(M_.endo_names_tex, '{z^{flex}}');
M_.endo_names_long = char(M_.endo_names_long, 'Capital utilization rate flex price economy');
M_.endo_names = char(M_.endo_names, 'rkf');
M_.endo_names_tex = char(M_.endo_names_tex, '{r^{k,flex}}');
M_.endo_names_long = char(M_.endo_names_long, 'rental rate of capital flex price economy');
M_.endo_names = char(M_.endo_names, 'kf');
M_.endo_names_tex = char(M_.endo_names_tex, '{k^{s,flex}}');
M_.endo_names_long = char(M_.endo_names_long, 'Capital services flex price economy');
M_.endo_names = char(M_.endo_names, 'pkf');
M_.endo_names_tex = char(M_.endo_names_tex, '{q^{flex}}');
M_.endo_names_long = char(M_.endo_names_long, 'real value of existing capital stock flex price economy');
M_.endo_names = char(M_.endo_names, 'cf');
M_.endo_names_tex = char(M_.endo_names_tex, '{c^{flex}}');
M_.endo_names_long = char(M_.endo_names_long, 'Consumption flex price economy');
M_.endo_names = char(M_.endo_names, 'invef');
M_.endo_names_tex = char(M_.endo_names_tex, '{i^{flex}}');
M_.endo_names_long = char(M_.endo_names_long, 'Investment flex price economy');
M_.endo_names = char(M_.endo_names, 'yf');
M_.endo_names_tex = char(M_.endo_names_tex, '{y^{flex}}');
M_.endo_names_long = char(M_.endo_names_long, 'Output flex price economy');
M_.endo_names = char(M_.endo_names, 'labf');
M_.endo_names_tex = char(M_.endo_names_tex, '{l^{flex}}');
M_.endo_names_long = char(M_.endo_names_long, 'hours worked flex price economy');
M_.endo_names = char(M_.endo_names, 'wf');
M_.endo_names_tex = char(M_.endo_names_tex, '{w^{flex}}');
M_.endo_names_long = char(M_.endo_names_long, 'real wage flex price economy');
M_.endo_names = char(M_.endo_names, 'rrf');
M_.endo_names_tex = char(M_.endo_names_tex, '{r^{flex}}');
M_.endo_names_long = char(M_.endo_names_long, 'real interest rate flex price economy');
M_.endo_names = char(M_.endo_names, 'mc');
M_.endo_names_tex = char(M_.endo_names_tex, '{\mu_p}');
M_.endo_names_long = char(M_.endo_names_long, 'gross price markup');
M_.endo_names = char(M_.endo_names, 'zcap');
M_.endo_names_tex = char(M_.endo_names_tex, '{z}');
M_.endo_names_long = char(M_.endo_names_long, 'Capital utilization rate');
M_.endo_names = char(M_.endo_names, 'rk');
M_.endo_names_tex = char(M_.endo_names_tex, '{r^{k}}');
M_.endo_names_long = char(M_.endo_names_long, 'rental rate of capital');
M_.endo_names = char(M_.endo_names, 'k');
M_.endo_names_tex = char(M_.endo_names_tex, '{k^{s}}');
M_.endo_names_long = char(M_.endo_names_long, 'Capital services');
M_.endo_names = char(M_.endo_names, 'pk');
M_.endo_names_tex = char(M_.endo_names_tex, '{q}');
M_.endo_names_long = char(M_.endo_names_long, 'real value of existing capital stock');
M_.endo_names = char(M_.endo_names, 'c');
M_.endo_names_tex = char(M_.endo_names_tex, '{c}');
M_.endo_names_long = char(M_.endo_names_long, 'Consumption');
M_.endo_names = char(M_.endo_names, 'inve');
M_.endo_names_tex = char(M_.endo_names_tex, '{i}');
M_.endo_names_long = char(M_.endo_names_long, 'Investment');
M_.endo_names = char(M_.endo_names, 'y');
M_.endo_names_tex = char(M_.endo_names_tex, '{y}');
M_.endo_names_long = char(M_.endo_names_long, 'Output');
M_.endo_names = char(M_.endo_names, 'lab');
M_.endo_names_tex = char(M_.endo_names_tex, '{l}');
M_.endo_names_long = char(M_.endo_names_long, 'hours worked');
M_.endo_names = char(M_.endo_names, 'pinf');
M_.endo_names_tex = char(M_.endo_names_tex, '{\pi}');
M_.endo_names_long = char(M_.endo_names_long, 'Inflation');
M_.endo_names = char(M_.endo_names, 'w');
M_.endo_names_tex = char(M_.endo_names_tex, '{w}');
M_.endo_names_long = char(M_.endo_names_long, 'real wage');
M_.endo_names = char(M_.endo_names, 'r');
M_.endo_names_tex = char(M_.endo_names_tex, '{r}');
M_.endo_names_long = char(M_.endo_names_long, 'nominal interest rate');
M_.endo_names = char(M_.endo_names, 'a');
M_.endo_names_tex = char(M_.endo_names_tex, '{\varepsilon_a}');
M_.endo_names_long = char(M_.endo_names_long, 'productivity process');
M_.endo_names = char(M_.endo_names, 'b');
M_.endo_names_tex = char(M_.endo_names_tex, '{c_2*\varepsilon_t^b}');
M_.endo_names_long = char(M_.endo_names_long, 'Scaled risk premium shock');
M_.endo_names = char(M_.endo_names, 'g');
M_.endo_names_tex = char(M_.endo_names_tex, '{\varepsilon^g}');
M_.endo_names_long = char(M_.endo_names_long, 'Exogenous spending');
M_.endo_names = char(M_.endo_names, 'qs');
M_.endo_names_tex = char(M_.endo_names_tex, '{\varepsilon^i}');
M_.endo_names_long = char(M_.endo_names_long, 'Investment-specific technology');
M_.endo_names = char(M_.endo_names, 'ms');
M_.endo_names_tex = char(M_.endo_names_tex, '{\varepsilon^r}');
M_.endo_names_long = char(M_.endo_names_long, 'Monetary policy shock process');
M_.endo_names = char(M_.endo_names, 'spinf');
M_.endo_names_tex = char(M_.endo_names_tex, '{\varepsilon^p}');
M_.endo_names_long = char(M_.endo_names_long, 'Price markup shock process');
M_.endo_names = char(M_.endo_names, 'sw');
M_.endo_names_tex = char(M_.endo_names_tex, '{\varepsilon^w}');
M_.endo_names_long = char(M_.endo_names_long, 'Wage markup shock process');
M_.endo_names = char(M_.endo_names, 'kpf');
M_.endo_names_tex = char(M_.endo_names_tex, '{k^{flex}}');
M_.endo_names_long = char(M_.endo_names_long, 'Capital stock flex price economy');
M_.endo_names = char(M_.endo_names, 'kp');
M_.endo_names_tex = char(M_.endo_names_tex, '{k}');
M_.endo_names_long = char(M_.endo_names_long, 'Capital stock');
M_.endo_partitions = struct();
M_.param_names = 'curvw';
M_.param_names_tex = '{\varepsilon_w}';
M_.param_names_long = 'Curvature Kimball aggregator wages';
M_.param_names = char(M_.param_names, 'cgy');
M_.param_names_tex = char(M_.param_names_tex, '{\rho_{ga}}');
M_.param_names_long = char(M_.param_names_long, 'Feedback technology on exogenous spending');
M_.param_names = char(M_.param_names, 'curvp');
M_.param_names_tex = char(M_.param_names_tex, '{\varepsilon_p}');
M_.param_names_long = char(M_.param_names_long, 'Curvature Kimball aggregator prices');
M_.param_names = char(M_.param_names, 'constelab');
M_.param_names_tex = char(M_.param_names_tex, '{\bar l}');
M_.param_names_long = char(M_.param_names_long, 'steady state hours');
M_.param_names = char(M_.param_names, 'constepinf');
M_.param_names_tex = char(M_.param_names_tex, '{\bar \pi}');
M_.param_names_long = char(M_.param_names_long, 'steady state inflation rate');
M_.param_names = char(M_.param_names, 'constebeta');
M_.param_names_tex = char(M_.param_names_tex, '{100(\beta^{-1}-1)}');
M_.param_names_long = char(M_.param_names_long, 'time preference rate in percent');
M_.param_names = char(M_.param_names, 'cmaw');
M_.param_names_tex = char(M_.param_names_tex, '{\mu_w}');
M_.param_names_long = char(M_.param_names_long, 'coefficient on MA term wage markup');
M_.param_names = char(M_.param_names, 'cmap');
M_.param_names_tex = char(M_.param_names_tex, '{\mu_p}');
M_.param_names_long = char(M_.param_names_long, 'coefficient on MA term price markup');
M_.param_names = char(M_.param_names, 'calfa');
M_.param_names_tex = char(M_.param_names_tex, '{\alpha}');
M_.param_names_long = char(M_.param_names_long, 'capital share');
M_.param_names = char(M_.param_names, 'czcap');
M_.param_names_tex = char(M_.param_names_tex, '{\psi}');
M_.param_names_long = char(M_.param_names_long, 'capacity utilization cost');
M_.param_names = char(M_.param_names, 'csadjcost');
M_.param_names_tex = char(M_.param_names_tex, '{\varphi}');
M_.param_names_long = char(M_.param_names_long, 'investment adjustment cost');
M_.param_names = char(M_.param_names, 'ctou');
M_.param_names_tex = char(M_.param_names_tex, '{\delta}');
M_.param_names_long = char(M_.param_names_long, 'depreciation rate');
M_.param_names = char(M_.param_names, 'csigma');
M_.param_names_tex = char(M_.param_names_tex, '{\sigma_c}');
M_.param_names_long = char(M_.param_names_long, 'risk aversion');
M_.param_names = char(M_.param_names, 'chabb');
M_.param_names_tex = char(M_.param_names_tex, '{\lambda}');
M_.param_names_long = char(M_.param_names_long, 'external habit degree');
M_.param_names = char(M_.param_names, 'ccs');
M_.param_names_tex = char(M_.param_names_tex, '{d_4}');
M_.param_names_long = char(M_.param_names_long, 'Unused parameter');
M_.param_names = char(M_.param_names, 'cinvs');
M_.param_names_tex = char(M_.param_names_tex, '{d_3}');
M_.param_names_long = char(M_.param_names_long, 'Unused parameter');
M_.param_names = char(M_.param_names, 'cfc');
M_.param_names_tex = char(M_.param_names_tex, '{\phi_p}');
M_.param_names_long = char(M_.param_names_long, 'fixed cost share');
M_.param_names = char(M_.param_names, 'cindw');
M_.param_names_tex = char(M_.param_names_tex, '{\iota_w}');
M_.param_names_long = char(M_.param_names_long, 'Indexation to past wages');
M_.param_names = char(M_.param_names, 'cprobw');
M_.param_names_tex = char(M_.param_names_tex, '{\xi_w}');
M_.param_names_long = char(M_.param_names_long, 'Calvo parameter wages');
M_.param_names = char(M_.param_names, 'cindp');
M_.param_names_tex = char(M_.param_names_tex, '{\iota_p}');
M_.param_names_long = char(M_.param_names_long, 'Indexation to past prices');
M_.param_names = char(M_.param_names, 'cprobp');
M_.param_names_tex = char(M_.param_names_tex, '{\xi_p}');
M_.param_names_long = char(M_.param_names_long, 'Calvo parameter prices');
M_.param_names = char(M_.param_names, 'csigl');
M_.param_names_tex = char(M_.param_names_tex, '{\sigma_l}');
M_.param_names_long = char(M_.param_names_long, 'Frisch elasticity');
M_.param_names = char(M_.param_names, 'clandaw');
M_.param_names_tex = char(M_.param_names_tex, '{\phi_w}');
M_.param_names_long = char(M_.param_names_long, 'Gross markup wages');
M_.param_names = char(M_.param_names, 'crdpi');
M_.param_names_tex = char(M_.param_names_tex, '{r_{\Delta \pi}}');
M_.param_names_long = char(M_.param_names_long, 'Unused parameter');
M_.param_names = char(M_.param_names, 'crpi');
M_.param_names_tex = char(M_.param_names_tex, '{r_{\pi}}');
M_.param_names_long = char(M_.param_names_long, 'Taylor rule inflation feedback');
M_.param_names = char(M_.param_names, 'crdy');
M_.param_names_tex = char(M_.param_names_tex, '{r_{\Delta y}}');
M_.param_names_long = char(M_.param_names_long, 'Taylor rule output growth feedback');
M_.param_names = char(M_.param_names, 'cry');
M_.param_names_tex = char(M_.param_names_tex, '{r_{y}}');
M_.param_names_long = char(M_.param_names_long, 'Taylor rule output level feedback');
M_.param_names = char(M_.param_names, 'crr');
M_.param_names_tex = char(M_.param_names_tex, '{\rho}');
M_.param_names_long = char(M_.param_names_long, 'interest rate persistence');
M_.param_names = char(M_.param_names, 'crhoa');
M_.param_names_tex = char(M_.param_names_tex, '{\rho_a}');
M_.param_names_long = char(M_.param_names_long, 'persistence productivity shock');
M_.param_names = char(M_.param_names, 'crhoas');
M_.param_names_tex = char(M_.param_names_tex, '{d_2}');
M_.param_names_long = char(M_.param_names_long, 'Unused parameter');
M_.param_names = char(M_.param_names, 'crhob');
M_.param_names_tex = char(M_.param_names_tex, '{\rho_b}');
M_.param_names_long = char(M_.param_names_long, 'persistence risk premium shock');
M_.param_names = char(M_.param_names, 'crhog');
M_.param_names_tex = char(M_.param_names_tex, '{\rho_g}');
M_.param_names_long = char(M_.param_names_long, 'persistence spending shock');
M_.param_names = char(M_.param_names, 'crhols');
M_.param_names_tex = char(M_.param_names_tex, '{d_1}');
M_.param_names_long = char(M_.param_names_long, 'Unused parameter');
M_.param_names = char(M_.param_names, 'crhoqs');
M_.param_names_tex = char(M_.param_names_tex, '{\rho_i}');
M_.param_names_long = char(M_.param_names_long, 'persistence risk premium shock');
M_.param_names = char(M_.param_names, 'crhoms');
M_.param_names_tex = char(M_.param_names_tex, '{\rho_r}');
M_.param_names_long = char(M_.param_names_long, 'persistence monetary policy shock');
M_.param_names = char(M_.param_names, 'crhopinf');
M_.param_names_tex = char(M_.param_names_tex, '{\rho_p}');
M_.param_names_long = char(M_.param_names_long, 'persistence price markup shock');
M_.param_names = char(M_.param_names, 'crhow');
M_.param_names_tex = char(M_.param_names_tex, '{\rho_w}');
M_.param_names_long = char(M_.param_names_long, 'persistence wage markup shock');
M_.param_names = char(M_.param_names, 'ctrend');
M_.param_names_tex = char(M_.param_names_tex, '{\bar \gamma}');
M_.param_names_long = char(M_.param_names_long, 'net growth rate in percent');
M_.param_names = char(M_.param_names, 'cg');
M_.param_names_tex = char(M_.param_names_tex, '{\frac{\bar g}{\bar y}}');
M_.param_names_long = char(M_.param_names_long, 'steady state exogenous spending share');
M_.param_partitions = struct();
M_.exo_det_nbr = 0;
M_.exo_nbr = 7;
M_.endo_nbr = 40;
M_.param_nbr = 39;
M_.orig_endo_nbr = 40;
M_.aux_vars = [];
options_.varobs = cell(1);
options_.varobs(1)  = {'gdp_rgd_obs'};
options_.varobs(2)  = {'c_rgd_obs'};
options_.varobs(3)  = {'ifi_rgd_obs'};
options_.varobs(4)  = {'hours_sw07_obs'};
options_.varobs(5)  = {'gdpdef_obs'};
options_.varobs(6)  = {'wage_rgd_obs'};
options_.varobs(7)  = {'ffr_obs'};
options_.varobs_id = [ 4 5 6 1 3 7 2  ];
M_.Sigma_e = zeros(7, 7);
M_.Correlation_matrix = eye(7, 7);
M_.H = 0;
M_.Correlation_matrix_ME = 1;
M_.sigma_e_is_diagonal = 1;
M_.det_shocks = [];
options_.linear = 1;
options_.block=0;
options_.bytecode=0;
options_.use_dll=0;
M_.hessian_eq_zero = 1;
erase_compiled_function('SW07_static');
erase_compiled_function('SW07_dynamic');
M_.orig_eq_nbr = 40;
M_.eq_nbr = 40;
M_.ramsey_eq_nbr = 0;
M_.set_auxiliary_variables = exist(['./' M_.fname '_set_auxiliary_variables.m'], 'file') == 2;
M_.lead_lag_incidence = [
 0 21 0;
 0 22 0;
 0 23 0;
 0 24 0;
 0 25 0;
 0 26 0;
 0 27 0;
 1 28 0;
 2 29 0;
 0 30 0;
 0 31 61;
 0 32 0;
 0 33 62;
 3 34 63;
 4 35 64;
 5 36 0;
 0 37 65;
 0 38 0;
 0 39 0;
 0 40 0;
 0 41 0;
 0 42 66;
 0 43 0;
 0 44 67;
 6 45 68;
 7 46 69;
 8 47 0;
 0 48 70;
 9 49 71;
 10 50 72;
 11 51 0;
 12 52 0;
 13 53 0;
 14 54 0;
 15 55 0;
 16 56 0;
 17 57 0;
 18 58 0;
 19 59 0;
 20 60 0;]';
M_.nstatic = 14;
M_.nfwrd   = 6;
M_.npred   = 14;
M_.nboth   = 6;
M_.nsfwrd   = 12;
M_.nspred   = 20;
M_.ndynamic   = 26;
M_.equations_tags = {
  1 , 'name' , 'FOC labor with mpl expressed as function of rk and w, flex price economy' ;
  2 , 'name' , 'FOC capacity utilization, flex price economy' ;
  3 , 'name' , 'Firm FOC capital, flex price economy' ;
  4 , 'name' , 'Definition capital services, flex price economy' ;
  5 , 'name' , 'Investment Euler Equation, flex price economy' ;
  6 , 'name' , 'Arbitrage equation value of capital, flex price economy' ;
  7 , 'name' , 'Consumption Euler Equation, flex price economy' ;
  8 , 'name' , 'Aggregate Resource Constraint, flex price economy' ;
  9 , 'name' , 'Aggregate Production Function, flex price economy' ;
  10 , 'name' , 'Wage equation, flex price economy' ;
  11 , 'name' , 'Law of motion for capital, flex price economy (see header notes)' ;
  12 , 'name' , 'FOC labor with mpl expressed as function of rk and w, SW Equation (9)' ;
  13 , 'name' , 'FOC capacity utilization, SW Equation (7)' ;
  14 , 'name' , 'Firm FOC capital, SW Equation (11)' ;
  15 , 'name' , 'Definition capital services, SW Equation (6)' ;
  16 , 'name' , 'Investment Euler Equation, SW Equation (3)' ;
  17 , 'name' , 'Arbitrage equation value of capital, SW Equation (4)' ;
  18 , 'name' , 'Consumption Euler Equation, SW Equation (2)' ;
  19 , 'name' , 'Aggregate Resource Constraint, SW Equation (1)' ;
  20 , 'name' , 'Aggregate Production Function, SW Equation (5)' ;
  21 , 'name' , 'New Keynesian Phillips Curve, SW Equation (10)' ;
  22 , 'name' , 'Wage Phillips Curve, SW Equation (13), with (12) plugged for mu_w' ;
  23 , 'name' , 'Taylor rule, SW Equation (14)' ;
  24 , 'name' , 'Law of motion for productivity' ;
  25 , 'name' , 'Law of motion for risk premium' ;
  26 , 'name' , 'Law of motion for spending process' ;
  27 , 'name' , 'Law of motion for investment specific technology shock process' ;
  28 , 'name' , 'Law of motion for monetary policy shock process' ;
  29 , 'name' , 'Law of motion for price markup shock process' ;
  31 , 'name' , 'Law of motion for wage markup shock process' ;
  33 , 'name' , 'Law of motion for capital, SW Equation (8) (see header notes)' ;
  34 , 'name' , 'Observation equation output' ;
  35 , 'name' , 'Observation equation consumption' ;
  36 , 'name' , 'Observation equation investment' ;
  37 , 'name' , 'Observation equation real wage' ;
  38 , 'name' , 'Observation equation inflation' ;
  39 , 'name' , 'Observation equation interest rate' ;
  40 , 'name' , 'Observation equation hours worked' ;
};
M_.static_and_dynamic_models_differ = 0;
M_.exo_names_orig_ord = [1:7];
M_.maximum_lag = 1;
M_.maximum_lead = 1;
M_.maximum_endo_lag = 1;
M_.maximum_endo_lead = 1;
oo_.steady_state = zeros(40, 1);
M_.maximum_exo_lag = 0;
M_.maximum_exo_lead = 0;
oo_.exo_steady_state = zeros(7, 1);
M_.params = NaN(39, 1);
M_.NNZDerivatives = [160; -1; -1];
M_.params( 12 ) = .025;
ctou = M_.params( 12 );
M_.params( 23 ) = 1.5;
clandaw = M_.params( 23 );
M_.params( 39 ) = 0.18;
cg = M_.params( 39 );
M_.params( 3 ) = 10;
curvp = M_.params( 3 );
M_.params( 1 ) = 10;
curvw = M_.params( 1 );
M_.params( 9 ) = .24;
calfa = M_.params( 9 );
cbeta=.9995;
M_.params( 13 ) = 1.5;
csigma = M_.params( 13 );
M_.params( 17 ) = 1.5;
cfc = M_.params( 17 );
M_.params( 2 ) = 0.51;
cgy = M_.params( 2 );
M_.params( 11 ) = 6.0144;
csadjcost = M_.params( 11 );
M_.params( 14 ) = 0.6361;
chabb = M_.params( 14 );
M_.params( 19 ) = 0.8087;
cprobw = M_.params( 19 );
M_.params( 22 ) = 1.9423;
csigl = M_.params( 22 );
M_.params( 21 ) = 0.6;
cprobp = M_.params( 21 );
M_.params( 18 ) = 0.3243;
cindw = M_.params( 18 );
M_.params( 20 ) = 0.47;
cindp = M_.params( 20 );
M_.params( 10 ) = 0.2696;
czcap = M_.params( 10 );
M_.params( 25 ) = 1.488;
crpi = M_.params( 25 );
M_.params( 28 ) = 0.8762;
crr = M_.params( 28 );
M_.params( 27 ) = 0.0593;
cry = M_.params( 27 );
M_.params( 26 ) = 0.2347;
crdy = M_.params( 26 );
M_.params( 29 ) = 0.9977;
crhoa = M_.params( 29 );
M_.params( 31 ) = 0.5799;
crhob = M_.params( 31 );
M_.params( 32 ) = 0.9957;
crhog = M_.params( 32 );
M_.params( 33 ) = 0.9928;
crhols = M_.params( 33 );
M_.params( 34 ) = 0.7165;
crhoqs = M_.params( 34 );
M_.params( 30 ) = 1;
crhoas = M_.params( 30 );
M_.params( 35 ) = 0;
crhoms = M_.params( 35 );
M_.params( 36 ) = 0;
crhopinf = M_.params( 36 );
M_.params( 37 ) = 0;
crhow = M_.params( 37 );
M_.params( 8 ) = 0;
cmap = M_.params( 8 );
M_.params( 7 ) = 0;
cmaw = M_.params( 7 );
M_.params( 4 ) = 0;
constelab = M_.params( 4 );
M_.params( 5 ) = 0.7;
constepinf = M_.params( 5 );
M_.params( 6 ) = 0.7420;
constebeta = M_.params( 6 );
M_.params( 38 ) = 0.3982;
ctrend = M_.params( 38 );
%
% SHOCKS instructions
%
M_.exo_det_length = 0;
M_.Sigma_e(1, 1) = (0.4618)^2;
M_.Sigma_e(2, 2) = (1.8513)^2;
M_.Sigma_e(3, 3) = (0.6090)^2;
M_.Sigma_e(4, 4) = (0.6017)^2;
M_.Sigma_e(5, 5) = (0.2397)^2;
M_.Sigma_e(6, 6) = (0.1455)^2;
M_.Sigma_e(7, 7) = (0.2089)^2;
estim_params_.var_exo = zeros(0, 10);
estim_params_.var_endo = zeros(0, 10);
estim_params_.corrx = zeros(0, 11);
estim_params_.corrn = zeros(0, 11);
estim_params_.param_vals = zeros(0, 10);
estim_params_.var_exo = [estim_params_.var_exo; 1, 0.4618, 0.01, 3, 4, 0.1, 2, NaN, NaN, NaN ];
estim_params_.var_exo = [estim_params_.var_exo; 2, 0.1818513, 0.025, 5, 4, 0.1, 2, NaN, NaN, NaN ];
estim_params_.var_exo = [estim_params_.var_exo; 3, 0.6090, 0.01, 3, 4, 0.1, 2, NaN, NaN, NaN ];
estim_params_.var_exo = [estim_params_.var_exo; 4, 0.46017, 0.01, 3, 4, 0.1, 2, NaN, NaN, NaN ];
estim_params_.var_exo = [estim_params_.var_exo; 5, 0.2397, 0.01, 3, 4, 0.1, 2, NaN, NaN, NaN ];
estim_params_.var_exo = [estim_params_.var_exo; 6, 0.1455, 0.01, 3, 4, 0.1, 2, NaN, NaN, NaN ];
estim_params_.var_exo = [estim_params_.var_exo; 7, 0.2089, 0.01, 3, 4, 0.1, 2, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 29, .9676, .01, .9999, 1, 0.5, 0.20, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 31, .2703, .01, .9999, 1, 0.5, 0.20, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 32, .9930, .01, .9999, 1, 0.5, 0.20, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 34, .5724, .01, .9999, 1, 0.5, 0.20, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 35, .3, .01, .9999, 1, 0.5, 0.20, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 36, .8692, .01, .9999, 1, 0.5, 0.20, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 37, .9546, .001, .9999, 1, 0.5, 0.20, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 8, .7652, 0.01, .9999, 1, 0.5, 0.2, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 7, .8936, 0.01, .9999, 1, 0.5, 0.2, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 11, 6.3325, 2, 15, 3, 4, 1.5, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 13, 1.2312, 0.25, 3, 3, 1.50, 0.375, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 14, 0.7205, 0.001, 0.99, 1, 0.7, 0.1, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 19, 0.7937, 0.3, 0.95, 1, 0.5, 0.1, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 22, 2.8401, 0.25, 10, 3, 2, 0.75, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 21, 0.7813, 0.5, 0.95, 1, 0.5, 0.10, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 18, 0.4425, 0.01, 0.99, 1, 0.5, 0.15, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 20, 0.3291, 0.01, 0.99, 1, 0.5, 0.15, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 10, 0.2648, 0.01, 1, 1, 0.5, 0.15, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 17, 1.4672, 1.0, 3, 3, 1.25, 0.125, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 25, 1.7985, 1.0, 3, 3, 1.5, 0.25, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 28, 0.8258, 0.5, 0.975, 1, 0.75, 0.10, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 27, 0.0893, 0.001, 0.5, 3, 0.125, 0.05, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 26, 0.2239, 0.001, 0.5, 3, 0.125, 0.05, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 5, 0.7, 0.1, 2.0, 2, 0.625, 0.1, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 6, 0.7420, 0.01, 2.0, 2, 0.25, 0.1, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 4, 1.2918, (-10.0), 10.0, 3, 0.0, 2.0, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 38, 0.3982, 0.1, 0.8, 3, 0.4, 0.10, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 2, 0.05, 0.01, 2.0, 3, 0.5, 0.25, NaN, NaN, NaN ];
estim_params_.param_vals = [estim_params_.param_vals; 9, 0.24, 0.01, 1.0, 3, 0.3, 0.05, NaN, NaN, NaN ];
write_latex_prior_table;  
options_.bayesian_irf = 1;
options_.forecast = 100;
options_.mh_drop = 0.4;
options_.mh_jscale = 0.3;
options_.mh_nblck = 1;
options_.mh_replic = 500000;
options_.mode_check.status = 1;
options_.mode_compute = 6;
options_.nodisplay = 1;
options_.order = 1;
options_.prefilter = 0;
options_.presample = 4;
options_.smoother = 1;
options_.sub_draws = 5000;
options_.datafile = 'data_20200211_ew64q1';
options_.xls_range = 'B1:Z226';
options_.xls_sheet = 's2';
var_list_ = char('gdp_rgd_obs');
oo_recursive_=dynare_estimation(var_list_);
save('SW07_results.mat', 'oo_', 'M_', 'options_');
if exist('estim_params_', 'var') == 1
  save('SW07_results.mat', 'estim_params_', '-append');
end
if exist('bayestopt_', 'var') == 1
  save('SW07_results.mat', 'bayestopt_', '-append');
end
if exist('dataset_', 'var') == 1
  save('SW07_results.mat', 'dataset_', '-append');
end
if exist('estimation_info', 'var') == 1
  save('SW07_results.mat', 'estimation_info', '-append');
end
if exist('dataset_info', 'var') == 1
  save('SW07_results.mat', 'dataset_info', '-append');
end
if exist('oo_recursive_', 'var') == 1
  save('SW07_results.mat', 'oo_recursive_', '-append');
end


disp(['Total computing time : ' dynsec2hms(toc(tic0)) ]);
disp('Note: 33 warning(s) encountered in the preprocessor')
if ~isempty(lastwarn)
  disp('Note: warning(s) encountered in MATLAB/Octave code')
end
diary off
