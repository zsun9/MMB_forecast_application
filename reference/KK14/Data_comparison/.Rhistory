inf_p = betweendates(DATE1,DATE2,series.data)
View(inf_p)
inf_p[,3] = inf_p[,3] - mean(inf_p[,3])
View(inf_p)
# install.packages("devtools")
# library(devtools)
# devtools::install_github("sboysel/fredr")
rm(list = ls())
library(fredr)
library(writexl)
library(dplyr)
library(readxl)
fredr_set_key("52191461124b452b055bc68a63d07928")
ref.vin.date <- as.Date("2008-12-31")
source("UtilityFunctions.R")
DATE1 <- as.Date("1983-01-01") # 1983Q1
DATE2 <- as.Date("2008-09-30")  # 2008Q3
########
# special definiation for real house prices due to data structure
data_ind <- 1    # 0 or 1, 0 means data length according to availbility,
# 1 means data length is defined as between DATE1 and DATE2
datalist <- list()
#== Inflation ===========
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "IPDNBS")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data <- as.data.frame(fredr_series_observations(series_id = "IPDNBS", frequency = "q", vintage_dates = closest_date))
series.data$date <- as.Date(series.data$date)
series.data[-1,3] = diff(series.data[,3])
series.data[1,3] = NA
series.data[,3] = log(series.data[,3])
inf_p = betweendates(DATE1,DATE2,series.data)
inf_p[,3] = inf_p[,3] - mean(inf_p[,3])
View(series.data)
# install.packages("devtools")
# library(devtools)
# devtools::install_github("sboysel/fredr")
rm(list = ls())
library(fredr)
library(writexl)
library(dplyr)
library(readxl)
fredr_set_key("52191461124b452b055bc68a63d07928")
ref.vin.date <- as.Date("2008-12-31")
source("UtilityFunctions.R")
DATE1 <- as.Date("1983-01-01") # 1983Q1
DATE2 <- as.Date("2008-09-30")  # 2008Q3
########
# special definiation for real house prices due to data structure
data_ind <- 1    # 0 or 1, 0 means data length according to availbility,
# 1 means data length is defined as between DATE1 and DATE2
datalist <- list()
#== Inflation ===========
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "GDPDEF")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data <- as.data.frame(fredr_series_observations(series_id = "GDPDEF", frequency = "q", vintage_dates = closest_date))
series.data$date <- as.Date(series.data$date)
series.data[-1,3] = diff(series.data[,3])
series.data[1,3] = NA
series.data[,3] = log(series.data[,3])
inf_p = betweendates(DATE1,DATE2,series.data)
inf_p[,3] = inf_p[,3] - mean(inf_p[,3])
View(inf_p)
# install.packages("devtools")
# library(devtools)
# devtools::install_github("sboysel/fredr")
rm(list = ls())
library(fredr)
library(writexl)
library(dplyr)
library(readxl)
fredr_set_key("52191461124b452b055bc68a63d07928")
ref.vin.date <- as.Date("2008-12-31")
source("UtilityFunctions.R")
DATE1 <- as.Date("1983-01-01") # 1983Q1
DATE2 <- as.Date("2008-09-30")  # 2008Q3
########
# special definiation for real house prices due to data structure
data_ind <- 1    # 0 or 1, 0 means data length according to availbility,
# 1 means data length is defined as between DATE1 and DATE2
datalist <- list()
#== Inflation ===========
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "GDPDEF")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data <- as.data.frame(fredr_series_observations(series_id = "GDPDEF", frequency = "q", vintage_dates = closest_date))
series.data$date <- as.Date(series.data$date)
series.data[-1,3] = diff(series.data[,3])
series.data[1,3] = NA
series.data[,3] = log(series.data[,3])
inf_p = betweendates(DATE1,DATE2,series.data)
View(inf_p)
# install.packages("devtools")
# library(devtools)
# devtools::install_github("sboysel/fredr")
rm(list = ls())
library(fredr)
library(writexl)
library(dplyr)
library(readxl)
fredr_set_key("52191461124b452b055bc68a63d07928")
ref.vin.date <- as.Date("2008-12-31")
source("UtilityFunctions.R")
DATE1 <- as.Date("1983-01-01") # 1983Q1
DATE2 <- as.Date("2008-09-30")  # 2008Q3
########
# special definiation for real house prices due to data structure
data_ind <- 1    # 0 or 1, 0 means data length according to availbility,
# 1 means data length is defined as between DATE1 and DATE2
datalist <- list()
#== Inflation ===========
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "GDPDEF")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data <- as.data.frame(fredr_series_observations(series_id = "GDPDEF", frequency = "q", vintage_dates = closest_date))
series.data$date <- as.Date(series.data$date)
series.data[,3] = log(series.data[,3])
series.data[-1,3] = diff(series.data[,3])
series.data[1,3] = NA
inf_p = betweendates(DATE1,DATE2,series.data)
View(inf_p)
# install.packages("devtools")
# library(devtools)
# devtools::install_github("sboysel/fredr")
rm(list = ls())
library(fredr)
library(writexl)
library(dplyr)
library(readxl)
fredr_set_key("52191461124b452b055bc68a63d07928")
ref.vin.date <- as.Date("2008-12-31")
source("UtilityFunctions.R")
DATE1 <- as.Date("1983-01-01") # 1983Q1
DATE2 <- as.Date("2008-09-30")  # 2008Q3
########
# special definiation for real house prices due to data structure
data_ind <- 1    # 0 or 1, 0 means data length according to availbility,
# 1 means data length is defined as between DATE1 and DATE2
datalist <- list()
#== Inflation ===========
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "GDPCTPI")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data <- as.data.frame(fredr_series_observations(series_id = "GDPCTPI", frequency = "q", vintage_dates = closest_date))
series.data$date <- as.Date(series.data$date)
series.data[,3] = log(series.data[,3])
series.data[-1,3] = diff(series.data[,3])
series.data[1,3] = NA
inf_p = betweendates(DATE1,DATE2,series.data)
View(inf_p)
# install.packages("devtools")
# library(devtools)
# devtools::install_github("sboysel/fredr")
rm(list = ls())
library(fredr)
library(writexl)
library(dplyr)
library(readxl)
fredr_set_key("52191461124b452b055bc68a63d07928")
ref.vin.date <- as.Date("2008-12-31")
source("UtilityFunctions.R")
DATE1 <- as.Date("1983-01-01") # 1983Q1
DATE2 <- as.Date("2008-09-30")  # 2008Q3
########
# special definiation for real house prices due to data structure
data_ind <- 1    # 0 or 1, 0 means data length according to availbility,
# 1 means data length is defined as between DATE1 and DATE2
datalist <- list()
#== Inflation ===========
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "GDPCTPI")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data <- as.data.frame(fredr_series_observations(series_id = "GDPCTPI", frequency = "q", vintage_dates = closest_date))
series.data$date <- as.Date(series.data$date)
series.data[-1,3] = diff(series.data[,3])
series.data[1,3] = NA
series.data[,3] = log(series.data[,3])
inf_p = betweendates(DATE1,DATE2,series.data)
View(inf_p)
# install.packages("devtools")
# library(devtools)
# devtools::install_github("sboysel/fredr")
rm(list = ls())
library(fredr)
library(writexl)
library(dplyr)
library(readxl)
fredr_set_key("52191461124b452b055bc68a63d07928")
ref.vin.date <- as.Date("2008-12-31")
source("UtilityFunctions.R")
DATE1 <- as.Date("1983-01-01") # 1983Q1
DATE2 <- as.Date("2008-09-30")  # 2008Q3
########
# special definiation for real house prices due to data structure
data_ind <- 1    # 0 or 1, 0 means data length according to availbility,
# 1 means data length is defined as between DATE1 and DATE2
datalist <- list()
#== Inflation ===========
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "GDPCTPI")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data <- as.data.frame(fredr_series_observations(series_id = "GDPCTPI", frequency = "q", vintage_dates = closest_date))
series.data$date <- as.Date(series.data$date)
series.data[,3] = log(series.data[,3])
series.data[-1,3] = diff(series.data[,3])
series.data[1,3] = NA
series.data[,3] = log(series.data[,3])
inf_p = betweendates(DATE1,DATE2,series.data)
# install.packages("devtools")
# library(devtools)
# devtools::install_github("sboysel/fredr")
rm(list = ls())
library(fredr)
library(writexl)
library(dplyr)
library(readxl)
fredr_set_key("52191461124b452b055bc68a63d07928")
ref.vin.date <- as.Date("2008-12-31")
source("UtilityFunctions.R")
DATE1 <- as.Date("1983-01-01") # 1983Q1
DATE2 <- as.Date("2008-09-30")  # 2008Q3
########
# special definiation for real house prices due to data structure
data_ind <- 1    # 0 or 1, 0 means data length according to availbility,
# 1 means data length is defined as between DATE1 and DATE2
datalist <- list()
#== Inflation ===========
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "GDPCTPI")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data <- as.data.frame(fredr_series_observations(series_id = "GDPCTPI", frequency = "q", vintage_dates = closest_date))
series.data$date <- as.Date(series.data$date)
series.data[,3] = log(series.data[,3])
series.data[-1,3] = diff(series.data[,3])
series.data[1,3] = NA
series.data[,3] = series.data[,3]*100
View(series.data)
# install.packages("devtools")
# library(devtools)
# devtools::install_github("sboysel/fredr")
rm(list = ls())
library(fredr)
library(writexl)
library(dplyr)
library(readxl)
fredr_set_key("52191461124b452b055bc68a63d07928")
ref.vin.date <- as.Date("2008-12-31")
source("UtilityFunctions.R")
DATE1 <- as.Date("1983-01-01") # 1983Q1
DATE2 <- as.Date("2008-09-30")  # 2008Q3
########
# special definiation for real house prices due to data structure
data_ind <- 1    # 0 or 1, 0 means data length according to availbility,
# 1 means data length is defined as between DATE1 and DATE2
datalist <- list()
#== Inflation ===========
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "GDPCTPI")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data <- as.data.frame(fredr_series_observations(series_id = "GDPCTPI", frequency = "q", vintage_dates = closest_date))
series.data$date <- as.Date(series.data$date)
series.data[,3] = log(series.data[,3])
series.data[-1,3] = diff(series.data[,3])
series.data[1,3] = NA
series.data[,3] = series.data[,3]*100
series.data[,3] = log(series.data[,3])
inf_p = betweendates(DATE1,DATE2,series.data)
View(inf_p)
# install.packages("devtools")
# library(devtools)
# devtools::install_github("sboysel/fredr")
rm(list = ls())
library(fredr)
library(writexl)
library(dplyr)
library(readxl)
fredr_set_key("52191461124b452b055bc68a63d07928")
ref.vin.date <- as.Date("2012-09-30")
source("UtilityFunctions.R")
DATE1 <- as.Date("1955-01-01") # 1983Q1
DATE2 <- as.Date("2012-06-30")  # 2008Q3
########
# special definiation for real house prices due to data structure
data_ind <- 1    # 0 or 1, 0 means data length according to availbility,
# 1 means data length is defined as between DATE1 and DATE2
datalist <- list()
#== Inflation ===========
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "GDPCTPI")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data <- as.data.frame(fredr_series_observations(series_id = "GDPCTPI", frequency = "q", vintage_dates = closest_date))
series.data$date <- as.Date(series.data$date)
series.data[,3] = log(series.data[,3])
series.data[-1,3] = diff(series.data[,3])
series.data[1,3] = NA
#series.data[,3] = series.data[,3]*100
#series.data[,3] = log(series.data[,3])
inf_p = betweendates(DATE1,DATE2,series.data)
View(inf_p)
# install.packages("devtools")
# library(devtools)
# devtools::install_github("sboysel/fredr")
rm(list = ls())
library(fredr)
library(writexl)
library(dplyr)
library(readxl)
fredr_set_key("52191461124b452b055bc68a63d07928")
ref.vin.date <- as.Date("2012-12-31")
source("UtilityFunctions.R")
DATE1 <- as.Date("1955-01-01") # 1983Q1
DATE2 <- as.Date("2012-06-30")  # 2008Q3
########
# special definiation for real house prices due to data structure
data_ind <- 1    # 0 or 1, 0 means data length according to availbility,
# 1 means data length is defined as between DATE1 and DATE2
datalist <- list()
#== Inflation ===========
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "GDPCTPI")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data <- as.data.frame(fredr_series_observations(series_id = "GDPCTPI", frequency = "q", vintage_dates = closest_date))
series.data$date <- as.Date(series.data$date)
series.data[,3] = log(series.data[,3])
series.data[-1,3] = diff(series.data[,3])
series.data[1,3] = NA
#series.data[,3] = series.data[,3]*100
#series.data[,3] = log(series.data[,3])
inf_p = betweendates(DATE1,DATE2,series.data)
View(inf_p)
# install.packages("devtools")
# library(devtools)
# devtools::install_github("sboysel/fredr")
rm(list = ls())
library(fredr)
library(writexl)
library(dplyr)
library(readxl)
fredr_set_key("52191461124b452b055bc68a63d07928")
ref.vin.date <- as.Date("2012-12-31")
source("UtilityFunctions.R")
DATE1 <- as.Date("1955-01-01") # 1983Q1
DATE2 <- as.Date("2012-06-30")  # 2008Q3
########
# special definiation for real house prices due to data structure
data_ind <- 1    # 0 or 1, 0 means data length according to availbility,
# 1 means data length is defined as between DATE1 and DATE2
datalist <- list()
#== Inflation ===========
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "GDPCTPI")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data <- as.data.frame(fredr_series_observations(series_id = "GDPCTPI", frequency = "q", vintage_dates = closest_date))
series.data$date <- as.Date(series.data$date)
series.data[,3] = log(series.data[,3])
series.data[-1,3] = diff(series.data[,3])
series.data[1,3] = NA
#series.data[,3] = series.data[,3]*100
#series.data[,3] = log(series.data[,3])
inf_p = betweendates(DATE1,DATE2,series.data)
inf_p[,3] = inf_p[,3] - mean(inf_p[,3])
datalist[["inf_p"]] <- inf_p
write_xlsx(datalist, path = "datalist.xlsx", col_names = TRUE)
# install.packages("devtools")
# library(devtools)
# devtools::install_github("sboysel/fredr")
rm(list = ls())
library(fredr)
library(writexl)
library(dplyr)
library(readxl)
fredr_set_key("52191461124b452b055bc68a63d07928")
ref.vin.date <- as.Date("2012-12-31")
source("UtilityFunctions.R")
DATE1 <- as.Date("1955-01-01") # 1983Q1
DATE2 <- as.Date("2012-06-30")  # 2008Q3
########
# special definiation for real house prices due to data structure
data_ind <- 1    # 0 or 1, 0 means data length according to availbility,
# 1 means data length is defined as between DATE1 and DATE2
datalist <- list()
#== Inflation ===========
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "GDPCTPI")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data <- as.data.frame(fredr_series_observations(series_id = "GDPCTPI", frequency = "q", vintage_dates = closest_date))
series.data$date <- as.Date(series.data$date)
series.data[,3] = log(series.data[,3])
series.data[-1,3] = diff(series.data[,3])
series.data[1,3] = NA
#series.data[,3] = series.data[,3]*100
#series.data[,3] = log(series.data[,3])
inf_p = betweendates(DATE1,DATE2,series.data)
inf_p[,3] = inf_p[,3] - mean(inf_p[,3])
datalist[["inf_p"]] <- inf_p
write_xlsx(datalist, path = "datalist.xlsx", col_names = TRUE)
# install.packages("devtools")
# library(devtools)
# devtools::install_github("sboysel/fredr")
rm(list = ls())
library(fredr)
library(writexl)
library(dplyr)
library(readxl)
fredr_set_key("52191461124b452b055bc68a63d07928")
ref.vin.date <- as.Date("2012-12-31")
source("UtilityFunctions.R")
DATE1 <- as.Date("1955-01-01") # 1983Q1
DATE2 <- as.Date("2012-06-30")  # 2008Q3
########
# special definiation for real house prices due to data structure
data_ind <- 1    # 0 or 1, 0 means data length according to availbility,
# 1 means data length is defined as between DATE1 and DATE2
datalist <- list()
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "DFF")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data <- as.data.frame(fredr_series_observations(series_id = "DFF", frequency = "q", vintage_dates = closest_date))
series.data$date <- as.Date(series.data$date)
View(series.data)
R = betweendates(DATE1,DATE2,series.data)
View(R)
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "DFF")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data <- as.data.frame(fredr_series_observations(series_id = "DFF", frequency = "q", vintage_dates = closest_date))
series.data$date <- as.Date(series.data$date)
series.data[,3] = log(series.data[,3])
R = betweendates(DATE1,DATE2,series.data)
View(R)
View(R)
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "DFF")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data <- as.data.frame(fredr_series_observations(series_id = "DFF", frequency = "q", vintage_dates = closest_date))
series.data$date <- as.Date(series.data$date)
R = betweendates(DATE1,DATE2,series.data)
View(betweendates)
View(R)
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "DFF")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data <- as.data.frame(fredr_series_observations(series_id = "DFF", frequency = "q", vintage_dates = closest_date))
series.data$date <- as.Date(series.data$date)
series.data[,3] = log(series.data[,3])
R = betweendates(DATE1,DATE2,series.data)
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "DFF")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data <- as.data.frame(fredr_series_observations(series_id = "DFF", frequency = "q", vintage_dates = closest_date))
series.data$date <- as.Date(series.data$date)
R = betweendates(DATE1,DATE2,series.data)
View(R)
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "COMPNFB")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data <- as.data.frame(fredr_series_observations(series_id = "COMPNFB", frequency = "q", vintage_dates = closest_date))
series.data1$date <- as.Date(series.data$date)
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "GDPCTPI")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data <- as.data.frame(fredr_series_observations(series_id = "GDPCTPI", frequency = "q", vintage_dates = closest_date))
series.data2$date <- as.Date(series.data$date)
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "CNP16OV")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data <- as.data.frame(fredr_series_observations(series_id = "CNP16OV", frequency = "q", vintage_dates = closest_date))
series.data3$date <- as.Date(series.data$date)
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "COMPNFB")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data1 <- as.data.frame(fredr_series_observations(series_id = "COMPNFB", frequency = "q", vintage_dates = closest_date))
series.data1$date <- as.Date(series.data1$date)
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "GDPCTPI")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data2 <- as.data.frame(fredr_series_observations(series_id = "GDPCTPI", frequency = "q", vintage_dates = closest_date))
series.data2$date <- as.Date(series.data2$date)
tmp.vindates<- as.Date(fredr_series_vintagedates(series_id = "CNP16OV")[[1]])
closest_date <- clost_vin_search(tmp.vindates, ref.vin.date )
series.data3 <- as.data.frame(fredr_series_observations(series_id = "CNP16OV", frequency = "q", vintage_dates = closest_date))
series.data3$date <- as.Date(series.data3$date)
View(series.data3)
View(series.data2)
View(series.data1)
View(series.data1)
inner_join(series.data1, series.data2, by = "date", copy = FALSE, suffix = c(".x", ".y"),
...)
inner_join(series.data1, series.data2, by = "date", copy = FALSE, suffix = c(".x", ".y"))
trial=inner_join(series.data1, series.data2, by = "date", copy = FALSE, suffix = c(".x", ".y"))
View(trial)
trial=inner_join(series.data1, series.data2,series.data3, by = "date", copy = FALSE, suffix = c(".x", ".y",".z"))
trial=inner_join(series.data1, series.data2, by = "date", copy = FALSE, suffix = c(".x", ".y"))
trial=inner_join(trial, series.data3, by = "date", copy = FALSE, suffix = c(".x", ".y"))
trial
View(trial)
trial=inner_join(series.data1, series.data2, by = "date", copy = FALSE, suffix = c(".x", ".y"))
trial=inner_join(trial, series.data3, by = "date", copy = FALSE, suffix = c(".x", ".z"))
View(trial)
trial=inner_join(series.data1, series.data2, by = "date", copy = FALSE, suffix = c(".x", ".y"))
trial=inner_join(trial, series.data3, by = "date", copy = FALSE, suffix = c(, ".z"))
trial=inner_join(series.data1, series.data2, by = "date", copy = FALSE, suffix = c(".x", ".y"))
trial=inner_join(trial, series.data3, by = "date", copy = FALSE, suffix = c("", ".z"))
View(trial)
trial=inner_join(series.data1, series.data2, by = "date", copy = FALSE, suffix = c(".x", ".y"))
trial=inner_join(trial, series.data3, by = "date", copy = FALSE, suffix = c(".", ".z"))
View(trial)
trial=inner_join(series.data1, series.data2, by = "date", copy = FALSE, suffix = c(".x", ".y"))
trial=inner_join(trial, series.data3, by = "date", copy = FALSE, suffix = c("", ".z"))
View(trial)
View(trial)
series.data[,"value"]
series.data=inner_join(series.data1, series.data2, by = "date", copy = FALSE, suffix = c(".x", ".y"))
series.data=inner_join(series.data, series.data3, by = "date", copy = FALSE, suffix = c("", ".z"))
View(series.data)
series.data[,"value"]
View(series.data)
series.data["2005-10-01",]
series.data[2005-10-01,]
series.data["date" == 2005-10-01,]
series.data["date" == "2005-10-01",]
View(series.data)
series.data[series.data$date == "2005-10-01",]
series.data[series.data$date == "2005-10-01","value"]
series.data[, "value"] = series.data[, "value"]/series.data[series.data$date == "2005-10-01","value"]
View(series.data)
w_dataset = betweendates(DATE1,DATE2,series.data)
View(w_dataset)
View(w_dataset)
w_obs = cbind(w_dataset$date, w_dataset$value.x/(w_dataset$value.y*w_dataset$value))
View(w_obs)
w_dataset$date
w_dataset$value.x/(w_dataset$value.y*w_dataset$value)
log(w_dataset$value.x/(w_dataset$value.y*w_dataset$value))
