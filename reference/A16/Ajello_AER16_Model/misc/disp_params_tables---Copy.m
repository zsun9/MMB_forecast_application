clear C

load Ajello_JMP_notax_results_09_16

x  = zeros(27,1);
xl = x;
xu = x;
y  = zeros(10,1);
yl = y;
yu = y;

shocks = char(...
'eps_z         ',... 
'eps_g         ',...
'eps_i         ',...
'eps_tau       ',...
'eps_beta      ',...
'eps_p         ',...
'eps_w         ',...
'eps_tau_trans ',...
'eps_meas      ',...
'eps_meas_sp   ');

for ii = 1:size(shocks,1)
         y(ii) = getfield(oo_.posterior_median.shocks_std,shocks(ii,:));
        yu(ii) = getfield(oo_.posterior_hpdsup.shocks_std,shocks(ii,:));
        yl(ii) = getfield(oo_.posterior_hpdinf.shocks_std,shocks(ii,:));
end

param_model = char(...
'bet_s       ',...
'nu          ',...
'h           ',...
'eta         ',...
'xi_p        ',...
'iota_p      ',...
'xi_w        ',...
'iota_w      ',...
'etau_q_ss   ',...
'theta_I     ',...
'pis         ',...
'sg          ',...
'rho_i       ',...
'phi_pi      ',...
'phi_DY      ',...
'tB          ',...
'rho_z       ',...
'rho_g       ',...
'rho_beta    ',...
'rho_tau     ',...
'rho_p       ',...
'rho_w       ',...
'theta_p     ',...
'theta_w     ',...
'decay       ',...
'fgs_param   ',...
'theta       ');
   
for ii = 1:size(param_model,1)
         x(ii) = getfield(oo_.posterior_median.parameters,param_model(ii,:));
        xu(ii) = getfield(oo_.posterior_hpdsup.parameters,param_model(ii,:));
        xl(ii) = getfield(oo_.posterior_hpdinf.parameters,param_model(ii,:));
end

par_label = char(...
'\gamma                   ',...
'(\beta^{-1} -1) \times100',...%1
'\delta                   ',...
'\nu                      ',...%2
'h                        ',...%3
'l_{ss}                   ',...
'\eta                     ',...%4
'\lambda_p                ',...
'\xi_p                    ',...%5
'\iota_p                  ',...%6
'\lambda_w                ',...
'\xi_w                    ',...%7
'\iota_w                  ',...%8
'\mu_A                    ',...
'\sigma_A                 ',...%12
'FGS_ss                   ',...%26
'\theta                   ',...%27
'Bs_{ss}                  ',...
'gs_{ss}                  ',...
'\tau_{q_{ss}} \times100  ',...%9
'\theta_I                 ',...%10
'\pi_{ss}                 ',...%11
'\rho_i                   ',...%13
'\phi_{\pi}               ',...%14
'\phi_{DY}                ',...%15
'\varphi_B                ',...%16
'\rho_z                   ',...%17
'\rho_g                   ',...%18
'\rho_{\bar{\tau}}        ',...%20
'\omega_{\tilde{\tau}}    ',...%25
'\rho_{\beta}             ',...%19
'\rho_p                   ',...%21
'\rho_w                   ',...%22
'\theta_p                 ',...%23
'\theta_w                 ',...%24
'\sigma_z                 ',...%
'\sigma_g                 ',...%
'\sigma_i                 ',...%
'\sigma_{\bar{\tau}}      ',...%
'\sigma_{\tilde{\tau}}    ',...%
'\sigma_{\beta}           ',...%
'\sigma_p                 ',...%
'\sigma_w                 ',...%
'\sigma_{ME_{sp}}         ',...%
'\sigma_{ME_{fgs}}        ');  %


par_descr = char(...
'SS Output Growth          ',...
'Discount Factor           ',...
'Capital Depreciation      ',...
'Inverse Frisch            ',...
'Habit                     ',...
'Labor Supply              ',...
'Labor Share               ',...
'Price Mark-up             ',...
'Calvo Prices              ',...
'Index Prices              ',...
'Wage Mark-up              ',...
'Calvo Wages               ',...
'Index Wages               ',...
'Mean Idiosyn. Technology  ',...
'Std. Idiosyn. Technology  ',...
'FGS Steady State          ',...
'Collateral Constr.        ',...
'Liquidity over GDP        ',...
'Govt. Spend. over GDP     ',...
'SS Intermediation Cost    ',...
'IAC                       ',...
'SS inflation              ',...
'Taylor Rule inertia       ',...
'Taylor Rule inflation     ',...
'Taylor Rule GDP growth    ',...
'Fiscal Rule - Debt        ',...
'AR(1) TFP growth shock    ',...
'AR(1) G shock             ',...
'AR(1) Fin. shock Trend    ',...
'AR(1) Fin2 shock Cycle    ',...
'AR(1) Beta shock          ',...
'AR(1) P Mark-up shock     ',...
'AR(1) W Mark-up shock     ',...
'MA(1) P shock             ',...
'MA(1) W shock             ',...
'Stdev TFP Growth Shock    ',...
'Stdev G Shock             ',...
'Stdev MP Shock            ',...
'Stdev Fin. Shock Trend    ',...
'Stdev Fin. Shock Cycle    ',...
'Stdev Beta Shock          ',...
'Stdev P Mark-up Shock     ',...
'Stdev W Mark-up Shock     ',...
'Stdev ME Spread           ',...
'Stdev ME FGS              ');

priors = char(...
'Gamma(0.5,0.25)             ',...
'Calibrated                ',...
'Calibrated                ',...
'Gamma(2,0.75)             ',...
'Beta(0.5,0.2)             ',...
'Calibrated                ',...
'Beta(0.6,0.05)            ',...
'Calibrated                ',...
'Beta(0.66,0.1)            ',...
'Beta(0.5,0.15)            ',...
'Calibrated                ',...
'Beta(0.66,0.1)            ',...
'Beta(0.5,0.15)            ',...
'Calibrated                ',...
'Gamma(0.1,0.04)           ',...
'Beta(0.35,0.05)           ',...
'Collateral Constr.        ',...
'Calibrated                ',...
'Calibrated                ',...
'Gamma(1,0.4)              ',...
'Gamma(4,2)                ',...
'Normal(0.5,0.1)           ',...
'Beta(0.85,0.1)            ',...
'Normal(0.7,0.05)          ',...
'Normal(0.125,0.1)         ',...
'Normal(0.5,0.2)           ',...
'Beta(0.5,0.2)             ',...
'Beta(0.5,0.2)             ',...
'Beta(0.5,0.2)             ',...
'Beta(0.5,0.2)             ',...
'Beta(0.5,0.2)             ',...
'Beta(0.5,0.2)             ',...
'Beta(0.5,0.2)             ',...
'Beta(0.5,0.2)             ',...
'Beta(0.5,0.2)             ',...
'InvGamma2(0.5,1)          ',...
'InvGamma2(0.5,1)          ',...
'InvGamma2(0.1,1)          ',...
'InvGamma2(0.5,1)          ',...
'InvGamma2(0.5,1)          ',...
'InvGamma2(0.5,1)          ',...
'InvGamma2(0.1,1)          ',...
'InvGamma2(0.1,1)          ',...
'InvGamma2(0.05,0.05)      ',...
'InvGamma2(0.05,0.05)      ');

par_values = [0.50    NaN     NaN   
x(1)    xl(1)   xu(1)  
0.025   NaN     NaN   
x(2)    xl(2)   xu(2) 
x(3)    xl(3)   xu(3)
0       NaN     NaN   
x(4)    xl(4)   xu(4)
0.15    NaN     NaN   
x(5)    xl(5)   xu(5) 
x(6)    xl(6)   xu(6) 
0.15    NaN     NaN   
x(7)    xl(7)   xu(7) 
x(8)    xl(8)   xu(8) 
1       NaN     NaN   
x(12)   xl(12)  xu(12)
x(26)   xl(26)  xu(26)
x(27)   xl(27)  xu(27)
0.02    NaN     NaN   
0.17    NaN     NaN   
x(9)    xl(9)   xu(9) 
x(10)   xl(10)  xu(10)
x(11)   xl(11)  xu(11)
x(13)   xl(13)  xu(13)
x(14)   xl(14)  xu(14)
x(15)   xl(15)  xu(15)
x(16)   xl(16)  xu(16)
x(17)   xl(17)  xu(17)
x(18)   xl(18)  xu(18)
x(20)   xl(20)  xu(20)
x(25)   xl(25)  xu(25)
x(19)   xl(19)  xu(19)
x(21)   xl(21)  xu(21)
x(22)   xl(22)  xu(22)
x(23)   xl(23)  xu(23)
x(24)   xl(24)  xu(24)
y(1)    yl(1)   yu(1) 
y(2)    yl(2)   yu(2) 
y(3)    yl(3)   yu(3) 
y(4)    yl(4)   yu(4) 
y(5)    yl(5)   yu(5) 
y(6)    yl(6)   yu(6) 
y(7)    yl(7)   yu(7) 
y(8)    yl(8)   yu(8) 
y(10)   yl(10)  yu(10) 
y(9)    yl(9)   yu(9)];

% 
% CI_tab                        = zeros(size(pp_idx,1),3);
% CI_tab(:,2)                   = xmat;
% CI_tab_ind                    = CI_tab(:,[1,2]);
% CI_tab_ind(pp_idx(:,2)==1,:)  = CI_every(:,[1,2]);
% CI_tab(pp_idx(:,2)==1,:)      = (round(CI_every*1000)/1000);
% 
% CI_tab_mode            = num2str(CI_tab(:,2),'%10.3f\n');
% CI_tab_05              = num2str(CI_tab(:,1),'%10.3f\n');
% CI_tab_95              = num2str(CI_tab(:,3),'%10.3f\n');
% 
andsign = char(' & ');
dollarsign_open = char(' ${ ');
dollarsign_close = char(' }$ ');
brak_open             = char(' [ ');
brak_close            = char(' ] ');
hyph                  = char(' - ');
% 
% prior_ind =          char('                             ');
% prior_ind = repmat(prior_ind,size(pp_idx,1),1);
% for i = 1:size(pp_idx,1)
%     if pp_idx(i,4)==1    
%         prior_ind(i,:) = [' N$(' num2str(pp_idx(i,5),'%10.3f\n') ' , ' num2str(pp_idx(i,6),'%10.3f\n') ')$          '];
%     elseif pp_idx(i,4)==2
%         prior_ind(i,:) = ['$\Gamma( ' num2str(pp_idx(i,5),'%10.3f\n') ' , ' num2str(pp_idx(i,6),'%10.3f\n') ')$     '];
%     elseif pp_idx(i,4)==3
%         prior_ind(i,:) = ['B$( ' num2str(pp_idx(i,5),'%10.3f\n') ' , ' num2str(pp_idx(i,6),'%10.3f\n') ')$          '];
%     elseif pp_idx(i,4) == 4
%         prior_ind(i,:) = ['Inv. $\Gamma( ' num2str(pp_idx(i,5),'%10.3f\n') ' , ' num2str(pp_idx(i,6),'%10.3f\n') ')$'];
%     else
%         prior_ind(i,:) = 'Calibrated                   ';
%     end
% end
% 
len = 250;

for index = 1:size(par_values,1)
    
    %i = find(indicator == index);
    
    if isnan(par_values(index,2))
        
        A = [dollarsign_open,par_label(index,:),dollarsign_close,andsign,par_descr(index,:),andsign,priors(index,:),andsign,dollarsign_open,num2str(par_values(index,1),3) , dollarsign_close, andsign, dollarsign_open, brak_open, dollarsign_close,...
            andsign, dollarsign_open, hyph, dollarsign_close,andsign, dollarsign_open, hyph, dollarsign_close,andsign, dollarsign_open, hyph, dollarsign_close,...
            andsign, dollarsign_open, brak_close, dollarsign_close,'\\'];
        
    else
        
    
        A = [dollarsign_open,par_label(index,:),dollarsign_close,andsign,par_descr(index,:),andsign,priors(index,:),andsign,dollarsign_open,num2str(par_values(index,1),3) , dollarsign_close, andsign, dollarsign_open, brak_open, dollarsign_close,...
            andsign, dollarsign_open, num2str(par_values(index,2),3), dollarsign_close,andsign, dollarsign_open, hyph, dollarsign_close,andsign, dollarsign_open, num2str(par_values(index,3),3), dollarsign_close,...
            andsign, dollarsign_open, brak_close, dollarsign_close,'\\'];
    
    end
    
    A = [A,repmat(' ',1,len - size(A,2))];
    %B = [' ',repmat(andsign,1,7),'\\'];
    %D = [A;B,repmat(' ',1,len-size(B,2))];
    D = A;
    if index == 1;
        C = D;
    else
        
    %    if CI_tab_ind(i,2) == 0
            
    %    else
        
            C = [C;D];
        
    %   end
    end
    
end